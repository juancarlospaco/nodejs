#[
autogenerated by docgen
loc: /home/runner/work/nodejs/nodejs/src/nodejs/jsugar.nim(172, 1)
rdoccmd: 
]#
import "/home/runner/work/nodejs/nodejs/src/nodejs/jsugar.nim"
from std/jsffi import JsObject
from std/sugar import `=>`

doAssert generate2FAcode() is cint
doAssert not uuid1validate("".cstring)
doAssert not uuid4validate("".cstring)
doAssert not uuid5validate("".cstring)
doAssert uuid1validate("e64cb2a6-3ff6-11eb-b378-0242ac130002".cstring)
doAssert uuid4validate("854fc25b-02f3-45cc-b521-516991b9bb99".cstring)
doAssert nextDays() is seq[JsObject]
doAssert pastDays() is seq[JsObject]

discard sparkline([1.cint, 2, 3, 4, 5], minimum = 0.cint, maximum = 10.cint)

iife:
  # (() => {
  echo "Hello Immediately Invoked Function Expressions"
  # })();

constant ::= "This is a JavaScript 'const'!.".cstring
# const constant = "This is a JavaScript 'const'!.";

proc example(argument0, argument1: int) {.codegenDecl: arrow.} =
  # const example = (argument0, argument1) => {
  echo "JavaScript Arrow Function for Nim functions"
  # }

let example2 = (arg0, arg1: int) {.codegenDecl: arrow.} => echo "JavaScript Arrow Function for Nim Arrow Functions"
# const example2 = (arg0, arg01) => { echo("JavaScript Arrow Function for Nim functions") };

doAssert nth(-9.cint) == "-9th".cstring
doAssert nth(0.cint) == "0th".cstring
doAssert nth(9.cint) == "9th".cstring
doAssert nth(1.cint) == "1st".cstring
doAssert nth(42.cint) == "42nd".cstring
doAssert nth(420.cint) == "420th".cstring
doAssert nth(666.cint) == "666th".cstring

doAssert toRGB("c0ffee".cstring) == [192.cint, 255, 238]
doAssert toHex([192.cint, 255, 238]) == "c0ffee".cstring

doAssert removeAccents("ÇáéíóúýÁÉÍÓÚÝàèìòùÀÈÌÒÙãõñäëïöüÿÄËÏÖÜÃÕÑâêîôûÂÊÎÔ".cstring) == "CaeiouyAEIOUYaeiouAEIOUaonaeiouyAEIOUAONaeiouAEIO".cstring
doAssert removeAccents("È,É,Ê,Ë,Û,Ù,Ï,Î,À,Â,Ô,è,é,ê,ë,û,ù,ï,î,à,â,ô,Ç,ç,Ã,ã,Õ,õ".cstring) == "E,E,E,E,U,U,I,I,A,A,O,e,e,e,e,u,u,i,i,a,a,o,C,c,A,a,O,o".cstring

doAssert editDistanceAscii("Kitten".cstring, "Bitten".cstring) == 1.cint ## Levenshtein distance

when off:
  jsexport constant, example, example2
  # export { constant, example, example2 };
